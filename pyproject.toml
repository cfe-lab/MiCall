[project]
name = "micall"
dynamic = ["version"]
description = "Pipeline for processing FASTQ data from an Illumina MiSeq to genotype human RNA viruses like HIV and hepatitis C."
authors = [
    { name = "British Columbia Centre for Excellence in HIV/AIDS", email = "vmysak@bccfe.ca" },
]
requires-python = ">=3.11,<3.12"
license = {text = "AGPL-3.0"}
classifiers = [
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]

dependencies = [
    # Requirements for running the bare pipeline under Kive.
    "pytz==2025.2",
    "biopython==1.85",
    "gotoh @ git+https://github.com/cfe-lab/gotoh.git@v0.3.0#egg=gotoh&subdirectory=alignment/gotoh",
    "pyvdrm @ git+https://github.com/cfe-lab/pyvdrm.git@v0.3.2",
    "numpy==2.3.4",
    "scipy==1.16.2",
    "matplotlib==3.10.7",
    "cutadapt==5.2",
    "python-Levenshtein==0.27.1",
    "PyYAML==6.0.2",
    "reportlab==4.4.4",
    "pysam==0.23.3",
    "genetracks @ git+https://github.com/cfe-lab/genetracks.git@v0.4",
    "mappy==2.30",
    "drawsvg==2.4.0",
    "cairosvg==2.8.2",
    "aligntools==1.2.1",
    "multicsv==1.0.5",

    # This dependency is not really needed for the main pipeline.
    # It is needed for `test`, `watcher`, and `basespace` programs.
    # But repeating this dependency in three different places confuses Github's dependabot.
    # So we employ this hack. TODO: see if dependabot can handle this now.
    "requests==2.32.5",
]

[project.optional-dependencies]
test = [
    # Dependencies required for running the test suite
    "pytest==8.4.2",
    "coverage==7.11.0",
    "pandas==2.3.3",
    "seaborn==0.13.2",
    "ete3==3.1.3",
    # For reading HCV rules from an Excel file.
    "openpyxl==3.1.5",
    # For turtle.
    "tk==0.1.0",

    # Also includes watcher's dependencies.
    "kiveapi @ git+https://github.com/cfe-lab/Kive.git@v0.15#egg=kiveapi&subdirectory=api",
]
dev = [
    # Dependencies required for development (linting, type checking, etc.)
    "ruff==0.14.2",
    "mypy==1.18.2",
    "mypy-extensions==1.1.0",
    "gprof2dot==2025.4.14",
    "codecov==2.1.13",  # For reporting the code coverage.
    "pandas-stubs==2.3.2.250926",
    "types-requests==2.32.4.20250913",
    "uv==0.9.5",
]
watcher = [
    # Requirements for running the MISEQ_MONITOR.py script
    "kiveapi @ git+https://github.com/cfe-lab/Kive.git@v0.15#egg=kiveapi&subdirectory=api",
]
basespace = [
    # Requirements for running the micall_basespace.py script
]

[project.scripts]
micall = "micall.__main__:cli"

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
# Never fail: use this if there is no Git repository / tags
fallback_version = "0.dev0"

[tool.hatch.build]
include = [
  "micall/",
]
exclude = [
  "micall/tests/",
]
skip-excluded-dirs = true

[project.urls]
homepage = "https://cfe-lab.github.io/MiCall"
repository = "https://github.com/cfe-lab/MiCall"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff.lint.per-file-ignores]
# TODO: resolve these warnings insteads of ignoring them.

# Syntax error: ignore unexpected token in this file
"micall/utils/make_hcv_genotype_refs.py" = ["E999"]

# File with unused imports and local variable assignments
"micall/core/plot_simple.py" = ["F401", "F841"]

# Ignore bare except usage in project configuration
"micall/core/project_config.py" = ["E722"]

# Unused import in remap module
"micall/core/remap.py" = ["F401"]

# Do not compare types and bare excepts in pssm_lib module
"micall/g2p/pssm_lib.py" = ["E722", "E721"]

# F-string errors without placeholders in tests
"micall/tests/svg_differ.py" = ["F541"]

# Unused import in test_aln2counts_report module
"micall/tests/test_aln2counts_report.py" = ["F401"]

# Multiple issues in test_consensus_aligner: unused imports, multi-statement line, and unused local variable
"micall/tests/test_consensus_aligner.py" = ["F401", "E701", "F841"]

# Unused import in test_primer_tracker module
"micall/tests/test_primer_tracker.py" = ["F401"]

# F-string errors without placeholders in test_remap module
"micall/tests/test_remap.py" = ["F541"]

# Unused import in test_sample module
"micall/tests/test_sample.py" = ["F401"]

# Unused imports, undefined name, and type comparison in aln2counts_simplify module
"micall/utils/aln2counts_simplify.py" = ["F401", "F821", "E721"]

# Unused local variable in compare_mapping module
"micall/utils/compare_mapping.py" = ["F841"]

# Multiple issues in conseq_compare: unused sys, redefinitions, and unused local variables
"micall/utils/conseq_compare.py" = ["F811", "F401", "F841"]

# Comparisons to None should use `is` or `is not` in dd module
"micall/utils/dd.py" = ["E711"]

# Unused imports and local variable in find_reads_in_sam module
"micall/utils/find_reads_in_sam.py" = ["F401", "F841"]

# F-string errors without placeholders in primer_tracker module
"micall/utils/primer_tracker.py" = ["F541"]

# F-string errors without placeholders in ref_aligner module
"micall/utils/ref_aligner.py" = ["F541"]

# Unused local variable in release_test_compare script
"release_test_compare.py" = ["F841"]

[tool.mypy]
files = ["micall/"]
check_untyped_defs = true

[[tool.mypy.overrides]]
module = "micall.core.plot_contigs"
check_untyped_defs = false

[[tool.mypy.overrides]]
module = [
    "micall.core.aln2counts",
    "micall.core.amplicon_finder",
    "micall.core.cascade_report",
    "micall.core.consensus_builder",
    "micall.core.coverage_plots",
    "micall.core.plot_simple",
    "micall.core.prelim_map",
    "micall.core.remap",
    "micall.core.sam2aln",
    "micall.core.trim_fastqs",
    "micall.drivers.run_info",
    "micall.drivers.sample_group",
    "micall.g2p.fastq_g2p",
    "micall.g2p.pssm_lib",
    "micall.resistance.asi_algorithm",
    "micall.resistance.genreport",
    "micall.resistance.pdfreport",
    "micall.resistance.resistance",
    "micall.tests.*",
    "micall.utils.aln2counts_simplify",
    "micall.utils.amplicon_finder",
    "micall.utils.analyze",
    "micall.utils.big_counter",
    "micall.utils.compare_454_samples",
    "micall.utils.compare_mapping",
    "micall.utils.concordance_evaluation",
    "micall.utils.conseq_compare",
    "micall.utils.contig_blaster",
    "micall.utils.contig_counts",
    "micall.utils.contig_summary",
    "micall.utils.convert_primers_cutadapt",
    "micall.utils.coverage_data",
    "micall.utils.dd",
    "micall.utils.denovo_simplify",
    "micall.utils.fetch_sequences",
    "micall.utils.find_by_coverage",
    "micall.utils.find_chimera",
    "micall.utils.find_missing_samples",
    "micall.utils.find_reads_in_sam",
    "micall.utils.genreport_rerun",
    "micall.utils.hcv_reference_tree",
    "micall.utils.hcv_rules_display",
    "micall.utils.hcv_rules_import",
    "micall.utils.make_fda_refs",
    "micall.utils.make_hcv_genotype_refs",
    "micall.utils.micall_kive",
    "micall.utils.micall_kive_resistance",
    "micall.utils.primer_tracker",
    "micall.utils.probe_finder",
    "micall.utils.project_seeds_from_compendium",
    "micall.utils.projects_dump",
    "micall.utils.projects_upload",
    "micall.utils.ref_aligner",
    "micall.utils.reference_distances",
    "micall.utils.release_test_compare",
    "micall.utils.release_test_microtest",
    "micall.utils.release_test_setup",
    "micall.utils.remap_fastq_simplify",
    "micall.utils.sam_g2p_simplify",
    "micall.utils.sample_fastq",
    "micall.utils.samples_from_454",
    "micall.utils.scan_run_folders",
    "micall.utils.seed_alignments",
    "micall.utils.spring_beads",
    "micall.utils.v3loop_alignment_scores.plot",
]
ignore_errors = true

[[tool.mypy.overrides]]
module = "mappy"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tomllib"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "gotoh"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "yaml"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "Bio"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "Bio.Seq"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "Bio.Blast.Applications"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "Bio.SeqRecord"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "kiveapi"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "genetracks"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "genetracks.elements"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "drawsvg"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "matplotlib"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "matplotlib.colors"
ignore_missing_imports = true
